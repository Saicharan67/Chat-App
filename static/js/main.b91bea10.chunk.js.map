{"version":3,"sources":["assets/StartChat2.svg","assets/login.svg","assets/sign.svg","Components/PrivateRoute.js","actions/constants.js","actions/user.actions.js","Components/Header/index.js","actions/auth.actions.js","Components/layout/index.js","Containers/Home/index.js","Containers/Login/index.js","Containers/Register/index.js","App.js","serviceWorker.js","reducers/user.reducer.js","reducers/auth.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","PrivateRoute","Component","component","rest","props","user","localStorage","getItem","JSON","parse","console","log","to","authConstants","UserConstants","getRealTimeNumberOfMessages","uid","dispatch","a","firestore","collection","where","onSnapshot","querySnapshot","newMessages","forEach","doc","data","user_uid_2","user_uid_1","type","payload","messages","Header","auth","useSelector","state","useDispatch","useState","logoutclicked","setlogoutclicked","className","authenticated","style","display","margin","color","fontWeight","FirstName","LastName","onClick","update","isOnline","then","signOut","clear","catch","error","err","fontSize","Layout","children","User","newmessages","e","key","src","alt","flex","justifyContent","pointerEvents","aria-hidden","HomePage","unsubscribe","ChatStarted","setChatStarted","ChatUser","setChatUser","message","setmessage","UserUid","setUserUid","view","setvisible","problem","talkingwith","useEffect","db","users","push","f","initChat","chatHistory","document","getElementsByClassName","scrollTop","scrollHeight","u","nusers","i","length","target","orderBy","conversations","uid_1","uid_2","getRealTimeConversations","id","isView","setInterval","submitMsg","msgObj","add","createdAt","Date","updateMessage","map","con","textAlign","marginTop","width","height","viewBox","fill","xmlns","fillrule","d","fill-rule","require","position","alignItems","value","placeholder","onChange","onKeyDown","event","effect","onClickAway","visible","onSelect","emoji","native","LoginPage","email","setEmail","password","setPassword","ButtonClicked","setButtonClicked","SignupButtonClicked","setsignup","name","href","preventDefault","signInWithEmailAndPassword","displayName","split","loggedInUser","setItem","stringify","alert","SignUpPage","setFirstName","setlastName","LoginButtonClicked","setLoginclicked","class","innerHTML","createUserWithEmailAndPassword","currentUser","updateProfile","set","signup","App","path","exact","Boolean","window","location","hostname","match","initstate","authenticating","rootReducer","combineReducers","action","Store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b91bea10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/StartChat2.b72f9c93.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.303e4a67.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign.a32792fd.svg\";","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\n/**\r\n* @author\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n  return(\r\n    <Route {...rest}  component={(props)=>{\r\n        const user = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : null;\r\n        console.log(user)\r\n       if(user){\r\n           return <Component {...props}/>\r\n       }else{\r\n           return <Redirect to={'/login'}/> \r\n       }\r\n   \r\n    }}/>\r\n   )\r\n\r\n }\r\n\r\nexport default PrivateRoute","export const authConstants = {\r\n    USER_LOGIN: 'USER_LOGIN',\r\n\r\n    USER_LOGOUT: \"USERLOGOUT\"\r\n}\r\n\r\nexport const UserConstants ={\r\n    GET_REAL_TIME_USERS: 'GET_REAL_TIME_USERS',\r\n    GET_REALTIME_MESSAGES: ' GET_REALTIME_MESSAGES',\r\n    GET_REALTIME_NEW_MESSAGES: 'GET_REALTIME_NEW_MESSAGES',\r\n    GET_TALKING_WITH_UID: 'GET_TALKING_WITH_UID'\r\n}","import { UserConstants } from \"./constants\"\r\nimport {firestore} from 'firebase'\r\n\r\n\r\n\r\n\r\nexport const getRealTimeUsers = (uid) => {\r\n   \r\nreturn async dispatch => {\r\n    dispatch({\r\n        type: `${UserConstants.GET_REAL_TIME_USERS}_REQUEST`\r\n    });\r\n    const db =firestore()\r\n   const unsubscribe = db.collection(\"users\")\r\n    .onSnapshot((querySnapshot)=> {\r\n        const  users = [];\r\n        querySnapshot.forEach(function(doc) {\r\n            if(doc.data().uid !== uid){\r\n                users.push(doc.data());\r\n            }\r\n         \r\n        });\r\n         console.log(users);\r\n       dispatch({\r\n           type: `${UserConstants.GET_REAL_TIME_USERS}_SUCCESS`,\r\n           payload: {users}\r\n       })\r\n    });\r\n    return unsubscribe;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getRealTimeConversations =(user)=> {\r\n    \r\n    return async dispatch => {\r\n      \r\n        const db =firestore()\r\n        db.collection('conversation')\r\n       // .where('user_uid_1','in',[user.uid_1,user.uid_2])\r\n        .orderBy('createdAt','asc')\r\n        .onSnapshot((querySnapshot)=>{\r\n            const conversations = []\r\n            querySnapshot.forEach(doc=>{\r\n                if(\r\n                    (doc.data().user_uid_1 === user.uid_1 && doc.data().user_uid_2 === user.uid_2)\r\n                    || \r\n                    (doc.data().user_uid_1 === user.uid_2 && doc.data().user_uid_2 === user.uid_1)\r\n                ){\r\n                    conversations.push(doc.data())\r\n                   \r\n\r\n                }\r\n                \r\n                  \r\n            })\r\n           \r\n                //console.log(user.uid_1,user.uid_2)\r\n              \r\n            \r\n                const talkingwith = user.uid_2\r\n               \r\n                dispatch({\r\n                    type: UserConstants.GET_REALTIME_MESSAGES,\r\n                    payload: { conversations , talkingwith }\r\n                })\r\n           \r\n               console.log(conversations)\r\n           \r\n        })    \r\n     \r\n    }\r\n \r\n    \r\n}\r\nexport const getRealTimeNumberOfMessages = (uid) => {\r\n   \r\n    return  async dispatch => {\r\n        const db =firestore()\r\n       \r\n        \r\n            \r\n            db.collection('conversation')\r\n           .where('isView','==', false)\r\n           .onSnapshot((querySnapshot)=>{\r\n            const newMessages={}\r\n            querySnapshot.forEach(doc=>{\r\n               \r\n               if( doc.data().user_uid_2===uid ){\r\n                             \r\n                               newMessages[doc.data().user_uid_1] = newMessages[doc.data().user_uid_1]?newMessages[doc.data().user_uid_1]+1:1\r\n                            \r\n               }                 \r\n            })\r\n            //console.log(newMessages)\r\n            const messages = newMessages\r\n            dispatch({\r\n                type: UserConstants.GET_REALTIME_NEW_MESSAGES,\r\n                payload: {messages}\r\n            })\r\n          \r\n         \r\n        })    \r\n        \r\n        \r\n       \r\n       \r\n        \r\n       \r\n}\r\n}\r\nexport const updateRealTimeView = (u) => {\r\n    return async () => {\r\n       \r\n        const db = firestore()\r\n       \r\n       const unsubscribe = db.collection('conversation')\r\n        .where('isView','==', false)\r\n        .where('user_uid_2','==',u.uid_1)\r\n        .where('user_uid_1','==',u.uid_2)\r\n        .onSnapshot((querySnapshot)=>{\r\n         \r\n            querySnapshot.forEach(doc=>{\r\n              \r\n                  if(doc.data().user_uid_1==u.uid_2 && doc.data().user_uid_2==u.uid_1){\r\n                      \r\n                    db.collection('conversation')\r\n                    .doc(doc.id)\r\n                    .update({\r\n                        isView: true\r\n                    })\r\n                    .then(()=>{\r\n                       \r\n                       \r\n                       \r\n                    })\r\n                    .catch(()=>{\r\n                        console.log('NotViewed')\r\n                    })\r\n                   \r\n                  }\r\n                  \r\n                \r\n\r\n                \r\n                  \r\n            })\r\n            \r\n        })    \r\n        \r\n      \r\n       setInterval(() => {\r\n           unsubscribe()\r\n       }, 2000);\r\n       \r\n}\r\n \r\n}\r\nexport const updateMessage = (msgObj) => {\r\n    return async dispatch => {\r\n        \r\n       const db =firestore();\r\n       db.collection('conversation')\r\n        .add({\r\n            ...msgObj,\r\n            isView: false,\r\n            createdAt: new Date()\r\n        })\r\n        .then((data)=>{\r\n           \r\n            console.log(data,'msg updated')\r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n       \r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {NavLink,Link} from 'react-router-dom'\r\nimport './style.css'\r\nimport {logout} from '../../actions'\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n    const auth = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const [logoutclicked,setlogoutclicked] = useState(false)\r\n\r\n    \r\n  return(\r\n    <header className={auth.authenticated? \"header\" : 'loginheader'}>\r\n        <div style={{display: 'flex'}}>\r\n            <div className='logo'>Chat-App</div>\r\n        </div>\r\n       \r\n  <div style={{margin: '20px 0' , color: '#fff' , fontWeight: '3rem'}}>{auth.authenticated ? `Hi ${auth.FirstName} ${auth.LastName}`: ''}</div>\r\n        <ul className=\"menu\">\r\n          {\r\n              auth.authenticated ? \r\n              <li>\r\n              <Link className='logout' to={\"#\"} onClick={()=>{\r\n                setlogoutclicked(true)\r\n                dispatch(logout(auth.uid))\r\n              }}>{\r\n                \r\n                 logoutclicked ?\r\n                 <i style={{fontSize:'20px'}}className=\"fa fa-spinner fa-spin \"></i>\r\n                 : 'Logout'\r\n                 \r\n              }</Link>\r\n              </li>\r\n              :null\r\n\r\n          }\r\n        </ul>\r\n          {\r\n            !auth.authenticated ?\r\n            <ul className=\"RightMenu\">\r\n            <li><NavLink to={'./login'}>Login</NavLink></li>\r\n            <li><NavLink to={'./signup'}>Signup</NavLink></li>\r\n            </ul>: null\r\n            }\r\n    </header>\r\n   )\r\n\r\n }\r\n\r\nexport default Header","import {auth,firestore} from 'firebase'\r\nimport { authConstants } from './constants';\r\nexport const signup = (user) => {\r\n    return async (dispatch)=>{\r\n        const db =firestore();\r\n        dispatch({type: `${authConstants.USER_LOGIN}_REQUEST`})\r\n        auth()\r\n        .createUserWithEmailAndPassword(user.email, user.password)\r\n        .then(data => {\r\n           \r\n            const currentUser = auth().currentUser;\r\n            const name =`${user.FirstName} ${user.LastName}`\r\n            currentUser.updateProfile({\r\n                displayName: name\r\n               \r\n            })\r\n            \r\n            .then(()=>{\r\n                console.log(data)\r\n               db.collection('users')\r\n               .doc(data.user.uid)\r\n               .set({\r\n                   FirstName: user.FirstName,\r\n                   LastName: user.LastName,\r\n                   uid: data.user.uid,\r\n                   createdAt: new Date(),\r\n                   isOnline : true\r\n               })\r\n               .then(()=>{\r\n                   const loggedInUser = {\r\n                    FirstName: user.FirstName,\r\n                    LastName: user.LastName,\r\n                    uid: data.user.uid,\r\n                    email: user.email\r\n                   }\r\n                localStorage.setItem('users' ,JSON.stringify({\r\n                    loggedInUser\r\n                }))\r\n                console.log(\"Sign Up  success\")\r\n                dispatch({\r\n                    type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                    payload: {user: loggedInUser}\r\n                })\r\n               })\r\n               .catch(err=>{\r\n                alert(err)\r\n                dispatch({type:`${authConstants.USER_LOGIN}_FAILURE`,\r\n            payload: {err} })\r\n               })\r\n           })\r\n        })\r\n        .catch(err=>alert(err))\r\n    }\r\n} \r\nexport const signin = (user)=> {\r\n    return async dispatch => {\r\n        dispatch({type: `${authConstants.USER_LOGIN}_REQUEST`})\r\n        const db = firestore()\r\n        auth()\r\n        .signInWithEmailAndPassword(user.email,user.password)\r\n        .then((data)=>{\r\n              console.log(\"SignIn Data\",data)\r\n              db.collection('users')\r\n            .doc(data.user.uid)\r\n            .update({\r\n                isOnline: true\r\n            })\r\n            .then(()=>{\r\n                    const name = data.user.displayName.split(\" \");\r\n                    const FirstName = name[0]\r\n                    const LastName = name[1]\r\n                    const loggedInUser = {\r\n                    FirstName,\r\n                    LastName,\r\n                    uid: data.user.uid,\r\n                    email: data.user.email,\r\n    \r\n                    }\r\n                    \r\n                    localStorage.setItem('users',JSON.stringify(loggedInUser))\r\n                    dispatch({\r\n                        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                        payload: {user: loggedInUser}\r\n                    })\r\n                    console.log(\"Logged In successfully\")\r\n            })\r\n            .catch((err)=>{\r\n                  alert(err)\r\n            })\r\n              \r\n        })\r\n        .catch((err)=>{\r\n            alert(err)\r\n            dispatch({\r\n                type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                payload: {err}\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const isLoggedInUser = () => {\r\n    return async dispatch => {\r\n      const user =   localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : null\r\n    \r\n    if(user){\r\n        dispatch({\r\n            type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n            payload: {user: user}\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n            payload: {err: 'Login Again Please'}\r\n        })\r\n    }\r\n}\r\n}\r\n\r\nexport const logout = (uid) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: `${authConstants.USER_LOGOUT}_REQUEST`\r\n        })\r\n        const db = firestore()\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .update({\r\n            isOnline: false\r\n        })\r\n        .then(()=>{\r\n            auth()\r\n            .signOut()\r\n            .then(()=>{\r\n               localStorage.clear()\r\n               dispatch({\r\n                   type : `${authConstants.USER_LOGIN}_SUCCESS`\r\n               })\r\n            })\r\n            .catch(error => {\r\n               \r\n                dispatch({\r\n                    type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                    payload: {error}\r\n                })\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header'\r\n\r\nconst Layout = (props)=> {\r\n    return (\r\n        <div>\r\n           <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","// import React from 'react'\r\nimport Layout from '../../Components/layout'\r\nimport {firestore} from 'firebase'\r\nimport Modal from 'react-awesome-modal';\r\nimport { UserConstants } from \"../../actions/constants\"\r\n\r\n// /**\r\n// * @author\r\n// * @function HomePage\r\n// **/\r\n\r\n// const HomePage = (props) => {\r\n \r\n//   return(\r\n//       <Layout>\r\n//        <div>HomePage</div>\r\n//       </Layout>\r\n   \r\n//    )\r\n\r\n//  }\r\n\r\n// export default HomePage\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealTimeConversations, getRealTimeUsers, updateMessage ,updateRealTimeView,getRealTimeNumberOfMessages} from '../../actions/user.actions';\r\n\r\n\r\nconst User = props => {\r\n   const {user ,onClick, newmessages} = props;\r\n   \r\n\r\n  \r\nreturn(\r\n              <div onClick={(e)=>onClick(user,e)} key={user.uid} className=\"displayName\">\r\n                  <div className='item'>\r\n                      {\r\n                        \r\n                       \r\n                      newmessages?newmessages[user.uid]?<span className=\"notify-badge\">{newmessages[user.uid]}</span> :'':''\r\n                       \r\n                      \r\n                      \r\n                        \r\n                      }\r\n                       <img className='Dp' src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTr3k-GgfticbNEipXYeXapEpiiawOSHjXfsQ&usqp=CAU\" alt=\"Dp\" />\r\n                   </div>\r\n                       \r\n                   \r\n                   <div className=\"displayPerson\" style={{display: 'flex',flex: 1, justifyContent: 'space-between', margin: '0 10px',pointerEvents: 'none'}}>\r\n                       <span style={{fontWeight: 500}}>{user.FirstName} {user.LastName}</span>\r\n                       <span className={user.isOnline ? 'onlineStatus':'onlineStatus off' }>\r\n                           {\r\n                               user.isOnline? \r\n                               <i style={{color:'green'}} className=\"fa fa-dot-circle-o\" aria-hidden=\"true\"></i>:\r\n                               <i style={{color:'red'}} className=\"fa fa-dot-circle-o\" aria-hidden=\"true\"></i>\r\n                           }\r\n                       </span>\r\n                   </div>\r\n               </div>\r\n)\r\n}\r\nconst HomePage = (props) => {\r\n  const user = useSelector(state => state.user)\r\n  \r\n  const dispatch = useDispatch() \r\n  let unsubscribe;\r\n  const auth = useSelector(state => state.auth)\r\n  const newMessages = useSelector(state => state.user.newmessages)\r\n  \r\n  const [ChatStarted,setChatStarted] =useState(false)\r\n  const [ChatUser,setChatUser] =useState('')\r\n  const [message,setmessage] =useState('')\r\n  const [UserUid,setUserUid] =useState('')\r\n  const [view , setvisible]=useState(false)\r\n  let problem = UserUid==user.talkingwith\r\n  \r\n  \r\n  \r\n  const openModal = () => {\r\n      console.log('opened')\r\n      setvisible(true)\r\n  }\r\n  const closeModal = () => {\r\n   console.log('closed')\r\n      setvisible(false)\r\n  }\r\n   useEffect(()=>{\r\n      unsubscribe =  dispatch(getRealTimeUsers(auth.uid))\r\n         .then((unsubscribe)=>{\r\n            return unsubscribe\r\n         })\r\n         .catch((err)=>{\r\n             console.log(err)\r\n         })\r\n\r\n      \r\n   }, [])\r\n\r\n   useEffect(()=>{\r\n    \r\n       return ()=>{\r\n           unsubscribe.then(f=>f()).catch(err=>console.log(err))\r\n           \r\n       }\r\n   },[])\r\n   useEffect(()=>{\r\n   \r\n    \r\n        dispatch(getRealTimeNumberOfMessages(auth.uid))\r\n       \r\n   },[])\r\n   \r\n  \r\n   const initChat = (talkingwith ,e) => {\r\n            \r\n          var chatHistory = document.getElementsByClassName(\"messageSections\")[0];\r\n         \r\n           chatHistory.scrollTop = chatHistory.scrollHeight ;\r\n           setChatStarted(true)\r\n           setUserUid(talkingwith.uid)\r\n           setChatUser( `${talkingwith.FirstName} ${talkingwith.LastName}`)         \r\n            const nusers=document.getElementsByClassName('displayName')      \r\n            for(let i = 0; i<nusers.length; i++ ){\r\n               nusers[i].className='displayName'\r\n              \r\n            }\r\n            e.target.className='displayName active'     \r\n            dispatch(getRealTimeConversations({uid_1: auth.uid, uid_2: talkingwith.uid  }))\r\n            dispatch(getRealTimeNumberOfMessages(auth.uid))            \r\n            dispatch(updateRealTimeView({uid_1: auth.uid, uid_2: talkingwith.uid  }))\r\n            console.log( auth.uid,talkingwith.uid)\r\n           \r\n   } \r\n   const addEmoji = e => {\r\n       let emoji = e.native;\r\n       setmessage(message+emoji)\r\n       console.log(emoji)\r\n   };\r\n   const submitMsg = () => {\r\n       \r\n       var chatHistory = document.getElementsByClassName(\"messageSections\")[0];\r\n       \r\n       chatHistory.scrollTop = chatHistory.scrollHeight ;\r\n      \r\n        const msgObj ={\r\n            user_uid_1: auth.uid,\r\n            user_uid_2: UserUid,\r\n            message\r\n        }\r\n        if(message!==''){\r\n            dispatch(updateMessage(msgObj))\r\n            .then(()=>{\r\n              setmessage('')\r\n            })\r\n        }\r\n        \r\n   }\r\n return (\r\n     <Layout>\r\n         \r\n   <div className=\"container\">\r\n   <div className=\"listOfUsers\">\r\n      {\r\n          user.users.length > 0 ? \r\n          user.users.map(user => {\r\n              return(\r\n                <User onClick={initChat} key={user.uid} user={user} newmessages={newMessages}/>\r\n              )\r\n          })\r\n          : null\r\n      }\r\n               \r\n   </div>\r\n   <div className=\"chatArea\">\r\n     \r\n         \r\n       <div className=\"chatHeader\">\r\n              {\r\n                  ChatStarted?\r\n                  ChatUser: 'Start Chating By Clicking On Users'\r\n                  \r\n              }\r\n       </div>\r\n      \r\n       <div className=\"messageSections\">\r\n           {\r\n               (ChatStarted)?\r\n               problem?\r\n               user.conversations.map((con,id)=>\r\n                   <div key={id} className={con.user_uid_1===auth.uid? 'sent': 'received'}   style={{ textAlign: con.user_uid_1===auth.uid? 'right': 'left' , marginTop: id===0? '15px': '2px'}}>\r\n                       \r\n                        {/* <p className={con.user_uid_1==auth.uid ?'messagestyleright':'messagestyleleft'}>{con.message}</p> */}\r\n                     \r\n                     <p className={ con.user_uid_1===auth.uid ? id==0 || user.conversations[id-1].user_uid_1!==auth.uid?'messagestyleright': 'normalrightmessage': id==0 || user.conversations[id-1].user_uid_1===auth.uid?'messagestyleleft':'normalleftmessage'} >\r\n                         {con.message} \r\n                     </p>\r\n                    {con.user_uid_1===auth.uid?con.isView?\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check2-all\" fill=\"blue\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                  <path fillrule=\"evenodd\" d=\"M12.354 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\r\n                                  <path d=\"M6.25 8.043l-.896-.897a.5.5 0 1 0-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 0 0 .708 0l7-7a.5.5 0 0 0-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\r\n                    </svg>\r\n                    :\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check2-all\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                  <path fill-rule=\"evenodd\" d=\"M12.354 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\r\n                                  <path d=\"M6.25 8.043l-.896-.897a.5.5 0 1 0-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 0 0 .708 0l7-7a.5.5 0 0 0-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\r\n                   </svg>:''}\r\n                        \r\n                  </div>\r\n               )\r\n               :\r\n               problem=!problem\r\n                   \r\n               \r\n               : <img className='startchat'\r\n               src={require('../../assets/StartChat2.svg')}/>\r\n           \r\n          \r\n           }\r\n       </div>\r\n       {   \r\n           \r\n           ChatStarted ?\r\n           <div className=\"chatControls\" >\r\n               <div    > \r\n                   <i className='fi fa fa-smile-o fa-2x' onClick={()=>openModal()}>\r\n                          \r\n                            \r\n                   </i>\r\n                  \r\n               </div>\r\n               \r\n               <div style={{width: '90%'  ,position:\"relative\",display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n              \r\n                       <input         \r\n                       className='textarea' value={message} placeholder='Enter Message..' onChange={(e)=> setmessage(e.target.value)}    \r\n                       onKeyDown={(event)=>{\r\n                           if(event.key==='Enter'){\r\n                                   return submitMsg()                \r\n                           }\r\n                       }}></input>\r\n              </div>\r\n\r\n              \r\n               <button className='SendButton' onClick={submitMsg}><i className='fa fa-send-o'></i></button>\r\n           </div>: \"\"\r\n       }\r\n          <Modal\r\n           effect=\"fadeInUp\"\r\n           onClickAway={() => closeModal()}\r\n           visible={view}\r\n           >\r\n             <Picker onSelect={addEmoji}   />\r\n           </Modal>\r\n   </div>\r\n</div>\r\n\r\n</Layout>\r\n );\r\n}\r\n\r\nexport default HomePage;","\r\nimport React, {  useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {  signin } from '../../actions'\r\n\r\nimport Layout from '../../Components/layout'\r\n\r\nimport './style.css'\r\n/**\r\n* @author\r\n* @function LoginPage\r\n**/\r\n\r\nconst LoginPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n    const [email , setEmail] = useState('');\r\n    const [password , setPassword] = useState('')\r\n    const [ButtonClicked,setButtonClicked]=useState(false)\r\n    const [SignupButtonClicked,setsignup]=useState(false)\r\n    // useEffect(()=> {\r\n    //     if(!auth.authenticated){\r\n    //         dispatch(isLoggedInUser)\r\n    //     }\r\n    // },[])\r\n    const signUpClick=()=>{\r\n       setsignup(true)\r\n       \r\n         //\r\n    }\r\n    const userLogin = (e) => {\r\n        setButtonClicked(true)\r\n        e.preventDefault()\r\n        if ( email=== \"\" ){\r\n           alert(\"Email Is Required\")\r\n           return\r\n        }\r\n        if(password===\"\"){\r\n            alert(\"Password Is Required\")\r\n            return\r\n        }\r\n        dispatch(signin({email,password}))\r\n\r\n    }\r\n    if(auth.authenticated){\r\n        return <Redirect to={'/Chat-App'}/>\r\n    }\r\n    if (SignupButtonClicked){\r\n        return <Redirect to={'/signup'}/>\r\n      }\r\n            \r\n             \r\n             \r\n  return(\r\n     <Layout>\r\n       <div className='body'>\r\n        <div className=\"app\">\r\n        <div className='bg'>\r\n       \r\n        <form>\r\n\t\t\t<header>\r\n                <img \r\n                src={require('../../assets/login.svg')}/>\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"inputs\">\r\n\t\t\t\t<input type=\"email\" name=\"email\" placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={\r\n                      (e)=>{\r\n                          setEmail(e.target.value)\r\n                      }\r\n                  }\r\n                ></input>\r\n\t\t\t\t<input type=\"password\" name=\"password\" placeholder=\"password\"\r\n                 value={password}\r\n                 onChange={(e)=>{\r\n                     setPassword(e.target.value)\r\n                 }}\r\n                ></input>\r\n\r\n\t\t\t\t<p className=\"light\"><a href=\"#\">Forgot password?</a></p>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\r\n\t\r\n\r\n       \r\n        </div>\r\n        <footer>\r\n            <button \r\n             className='LoginButton'\r\n             onClick={userLogin}>\r\n                 {\r\n                  ButtonClicked ?\r\n                  <i style={{fontSize:'20px'}}className=\"fa fa-spinner fa-spin \"></i>\r\n                  : 'Continue'\r\n                 }\r\n            \r\n            </button>\r\n\t\t\t<p>Don't have an account?  &nbsp;\r\n            &nbsp; <h4  onClick={signUpClick} >Sign Up</h4></p>\r\n\t\t</footer>\r\n\r\n        </div>\r\n        </div>\r\n        </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default LoginPage","import React, { useState } from 'react'\r\nimport Layout from '../../Components/layout'\r\nimport Card from '../../Components/UI'\r\nimport {signup} from '../../actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './style.css'\r\n/**\r\n* @author\r\n* @function SignUpPage\r\n**/\r\nconst SignUpPage = (props) => {\r\n    const [FirstName , setFirstName] = useState('')\r\n    const [LastName , setlastName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n    const dispatch = useDispatch();\r\n    const [ButtonClicked,setButtonClicked]=useState(false)\r\n    const auth = useSelector(state => state.auth)\r\n    const [LoginButtonClicked,setLoginclicked] = useState(false)\r\n    const LoginClick = ()=>{\r\n        setLoginclicked(true)\r\n\r\n    }\r\n\r\nconst registerUser = (e) => {\r\n    setButtonClicked(true)\r\n    document.getElementsByClassName(\"SignUpButton\")[0].innerHTML=`<i className=\"fa fa-spinner fa-spin\">`;\r\n    e.preventDefault()\r\n    const user = {\r\n        FirstName,LastName,email,password\r\n\r\n    }\r\n    dispatch(signup(user))\r\n}\r\nif(auth.authenticated){\r\n    return <Redirect to={'/Chat-App'}/>\r\n}\r\nif(LoginButtonClicked){\r\n    return <Redirect to={'/login'}/>\r\n}\r\n\r\n  return(\r\n    <Layout>\r\n        <div className='body2'>\r\n        <div class=\"app2\">\r\n        <div className='bg2'>\r\n       \r\n        <form className=\"signinform\"\r\n        >\r\n        <img className=\"Signimg\" src={require('../../assets/sign.svg')}/>\r\n\r\n\t\t\t<div className=\"Signinputs\"\r\n           >\r\n            <input\r\n                name=\"FirstName\"\r\n                type='FirtName'\r\n                value={FirstName}\r\n                onChange={(e) =>{\r\n                   setFirstName(e.target.value)\r\n                }}\r\n                placeholder=\"FirstName\"\r\n                >\r\n                </input>\r\n                <input\r\n                name=\"LastName\"\r\n                type='LastName'\r\n                value={LastName}\r\n                onChange={(e) =>{\r\n                   setlastName(e.target.value)\r\n                }}\r\n                placeholder=\"LastName\"\r\n                >\r\n                </input>\r\n                <input\r\n                name=\"email\"\r\n                type='email'\r\n                value={email}\r\n                onChange={(e) =>{\r\n                   setEmail(e.target.value)\r\n                }}\r\n                placeholder=\"Email..\"\r\n                >\r\n                </input>\r\n                <input\r\n                name=\"password\"\r\n                type='password'\r\n                value={password}\r\n                onChange={(e) =>{\r\n                   setPassword(e.target.value)\r\n                }}\r\n                placeholder=\"Password\"\r\n                >\r\n                </input>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\r\n        </div>\r\n        <footer>\r\n\t\t\t<button className='SignUpButton' onClick={registerUser}>\r\n            {\r\n                  ButtonClicked ?\r\n                  <i style={{fontSize:'20px'}}className=\"fa fa-spinner fa-spin \"></i>\r\n                  : 'Sign Up'\r\n                 }\r\n            </button>\r\n\t\t\t<p className=\"p\">Already a User ?&nbsp;\r\n            &nbsp;<h4 onClick={LoginClick}  > Login</h4>\r\n            </p>\r\n            \r\n            \r\n\t\t</footer>\r\n\r\n        </div>\r\n        </div>\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default SignUpPage","import  React , {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport './App.css';\nimport PrivateRoute from './Components/PrivateRoute';\nimport HomePage from './Containers/Home';\nimport LoginPage from './Containers/Login';\nimport SignUpPage from './Containers/Register';\nimport {isLoggedInUser} from  './actions'\nfunction App() {\n\n\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n        if(!auth.authenticated){\n            dispatch(isLoggedInUser())\n        }\n    }, []);\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <PrivateRoute path='/Chat-App' exact component={HomePage}/>\n        <Route path='/login' component={LoginPage}/>\n        <Route path='/signup' component={SignUpPage}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { UserConstants } from \"../actions/constants\"\r\n\r\nconst initstate ={\r\n    users:[],\r\n    talkingwith:'',\r\n    conversations: []\r\n}\r\n\r\n\r\nexport default (state = initstate,action) => {\r\n  switch(action.type){\r\n    case `${UserConstants.GET_REAL_TIME_USERS}_REQUEST`:\r\n        break\r\n    case `${UserConstants.GET_REAL_TIME_USERS}_SUCCESS`:\r\n        state={\r\n            ...state,\r\n            users: action.payload.users\r\n        }\r\n        break\r\n    case UserConstants.GET_REALTIME_MESSAGES:\r\n       \r\n       \r\n            state={\r\n                ...state,\r\n                conversations: action.payload.conversations,\r\n                talkingwith:action.payload.talkingwith\r\n               \r\n            }\r\n       \r\n        break\r\n    case UserConstants.GET_REALTIME_NEW_MESSAGES:\r\n       \r\n        state={\r\n            ...state,\r\n            newmessages: action.payload.messages,\r\n           \r\n        }\r\n        break\r\n   \r\n    \r\n\r\n  }\r\n    return state\r\n}\r\n\r\n","import { authConstants } from \"../actions/constants\";\r\n\r\nconst initstate = {\r\n    FirstName : '',\r\n    LastName : ' ',\r\n    email : '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null\r\n}\r\nexport default (state = initstate,action) => {\r\n    \r\n    switch(action.type){\r\n        case `${authConstants.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case  `${authConstants.USER_LOGIN}_SUCCESS`:\r\n            state={\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break\r\n        case `${authConstants.USER_LOGIN}_FAILURE`:\r\n            state={\r\n                ...state,\r\n                error: action.payload.error,\r\n                authenticated: false,\r\n                authenticating: false\r\n            }\r\n            break\r\n        case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n            state={\r\n                ...initstate\r\n            }\r\n             break;\r\n        case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n               state={\r\n                   ...state,\r\n                   error: action.payload.error\r\n\r\n               }\r\n                break;\r\n        \r\n             \r\n    }\r\n    return state\r\n}","import { combineReducers } from \"redux\"\r\nimport userReducer from './user.reducer'\r\nimport authReducer from './auth.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport default rootReducer;","import {applyMiddleware, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers'\r\n\r\nconst Store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwgSea1nJXF2dr4CVgF7U9v4s8mYPOsCg\",\n  authDomain: \"chat-app-f6ff0.firebaseapp.com\",\n  databaseURL: \"https://chat-app-f6ff0.firebaseio.com\",\n  projectId: \"chat-app-f6ff0\",\n  storageBucket: \"chat-app-f6ff0.appspot.com\",\n  messagingSenderId: \"128106480680\",\n  appId: \"1:128106480680:web:af3f88cb6e8e04f57d211d\",\n  measurementId: \"G-Q6VRBKS781\"\n};\n\nfirebase.initializeApp(firebaseConfig)\nwindow.store = store\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}